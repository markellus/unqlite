CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
PROJECT(unqlite)
INCLUDE(GNUInstallDirs)

# If the user did not customize the install prefix,
# set it to live under build so we don't inadvertently pollute /usr/local
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  SET(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "default install path" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

OPTION(ENABLE_THREADS "Enable threads" OFF)

IF(${ENABLE_THREADS})
  ADD_DEFINITIONS("-DUNQLITE_ENABLE_THREADS")
ENDIF(${ENABLE_THREADS})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/src)

SET(HEADERS_UNQLITE
  unqlite.h
)

SET(SOURCES_UNQLITE
  unqlite.c
)

SET(UNQLITE_STATIC_LIB unqlite)
ADD_LIBRARY(${UNQLITE_STATIC_LIB} STATIC ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})

INSTALL(TARGETS ${UNQLITE_STATIC_LIB} COMPONENT devel ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
INSTALL(FILES ${HEADERS_UNQLITE} COMPONENT devel DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")

# Build examples
ADD_EXECUTABLE(Example_1 ${CMAKE_CURRENT_LIST_DIR}/example/1.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_2 ${CMAKE_CURRENT_LIST_DIR}/example/2.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_3 ${CMAKE_CURRENT_LIST_DIR}/example/3.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_4 ${CMAKE_CURRENT_LIST_DIR}/example/4.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_5 ${CMAKE_CURRENT_LIST_DIR}/example/5.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_6 ${CMAKE_CURRENT_LIST_DIR}/example/6.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_huge ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_huge.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_mp3 ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_mp3.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_tar ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_tar.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})