CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
PROJECT(unqlite)
INCLUDE(GNUInstallDirs)
set(CMAKE_CXX_STANDARD 17)

# If the user did not customize the install prefix,
# set it to live under build so we don't inadvertently pollute /usr/local
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  SET(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "default install path" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

OPTION(ENABLE_THREADS "Enable threads" OFF)

IF(${ENABLE_THREADS})
  ADD_DEFINITIONS("-DUNQLITE_ENABLE_THREADS")
ENDIF(${ENABLE_THREADS})

set(CMAKE_EXE_LINKER_FLAGS    -static)
set(CMAKE_SHARED_LINKER_FLAGS -Wl,--export-all-symbols)

INCLUDE_DIRECTORIES(
        ${CMAKE_CURRENT_LIST_DIR}/src
        ${CMAKE_CURRENT_LIST_DIR}/include
        ${CMAKE_CURRENT_LIST_DIR}/include/core
)

SET(HEADERS_UNQLITE
        ${CMAKE_CURRENT_LIST_DIR}/include/core/unqlite.h
        ${CMAKE_CURRENT_LIST_DIR}/include/core/jx9.h
        ${CMAKE_CURRENT_LIST_DIR}/include/core/jx9Int.h
        ${CMAKE_CURRENT_LIST_DIR}/include/core/unqliteInt.h
)

SET(SOURCES_UNQLITE
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_api.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_builtin.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_compile.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_const.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_hashmap.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_json.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_lex.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_lib.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_memobj.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_parse.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_vfs.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/jx9/jx9_vm.c

        ${CMAKE_CURRENT_LIST_DIR}/src/core/os/os.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/os/os_unix.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/os/os_win.c

        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/api.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/bitvec.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/fastjson.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/lhash_kv.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/mem_kv.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/pager.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/unqlite_jx9.c
        ${CMAKE_CURRENT_LIST_DIR}/src/core/unqlite/unqlite_vm.c
)

SET(HEADERS_UNQLITE_CPP
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/CollectionQuery.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/CollectionQueryType.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/Database.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/pch.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/Query.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/QueryResult.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/ScriptExtensions.hpp
        ${CMAKE_CURRENT_LIST_DIR}/include/unqlite/Unqlite.hpp)

SET(SOURCES_UNQLITE_CPP
        ${CMAKE_CURRENT_LIST_DIR}/src/unqlite/CollectionQuery.cpp
        ${CMAKE_CURRENT_LIST_DIR}/src/unqlite/Database.cpp
        ${CMAKE_CURRENT_LIST_DIR}/src/unqlite/Query.cpp
        ${CMAKE_CURRENT_LIST_DIR}/src/unqlite/ScriptExtensions.cpp
        )

SET(UNQLITE_STATIC_LIB unqlite)
ADD_LIBRARY(${UNQLITE_STATIC_LIB} STATIC ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})

SET(UNQLITE_STATIC_LIB_CPP unqlite-cpp)
ADD_LIBRARY(${UNQLITE_STATIC_LIB_CPP} STATIC ${HEADERS_UNQLITE_CPP} ${SOURCES_UNQLITE_CPP})
TARGET_LINK_LIBRARIES(${UNQLITE_STATIC_LIB_CPP} PUBLIC ${UNQLITE_STATIC_LIB})
TARGET_PRECOMPILE_HEADERS(${UNQLITE_STATIC_LIB_CPP} PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_LIST_DIR}/include/unqlite/pch.hpp>" )

SET(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
SET(UNQLITE_SHARED_LIB unqlite-shared)
ADD_LIBRARY(${UNQLITE_SHARED_LIB} SHARED ${HEADERS_UNQLITE} ${SOURCES_UNQLITE} ${HEADERS_UNQLITE_CPP} ${SOURCES_UNQLITE_CPP})
TARGET_PRECOMPILE_HEADERS(${UNQLITE_SHARED_LIB} PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_LIST_DIR}/include/unqlite/pch.hpp>" )
SET_TARGET_PROPERTIES(${UNQLITE_SHARED_LIB} PROPERTIES OUTPUT_NAME Database-2)
SET_TARGET_PROPERTIES(${UNQLITE_SHARED_LIB} PROPERTIES SUFFIX ".dll" PREFIX "lib")

INSTALL(TARGETS ${UNQLITE_STATIC_LIB} COMPONENT devel ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
INSTALL(FILES ${HEADERS_UNQLITE} COMPONENT devel DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/core")
INSTALL(TARGETS ${UNQLITE_STATIC_LIB_CPP} COMPONENT devel ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
INSTALL(FILES ${HEADERS_UNQLITE_CPP} COMPONENT devel DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/unqlite")
INSTALL(TARGETS ${UNQLITE_SHARED_LIB} COMPONENT devel ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
INSTALL(TARGETS ${UNQLITE_SHARED_LIB} LIBRARY DESTINATION "${CMAKE_INSTALL_BINDIR}")

# Build examples
ADD_EXECUTABLE(Example_1 ${CMAKE_CURRENT_LIST_DIR}/example/1.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_2 ${CMAKE_CURRENT_LIST_DIR}/example/2.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_3 ${CMAKE_CURRENT_LIST_DIR}/example/3.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_4 ${CMAKE_CURRENT_LIST_DIR}/example/4.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_5 ${CMAKE_CURRENT_LIST_DIR}/example/5.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_6 ${CMAKE_CURRENT_LIST_DIR}/example/6.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_huge ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_huge.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_mp3 ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_mp3.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})
ADD_EXECUTABLE(Example_tar ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_tar.c ${HEADERS_UNQLITE} ${SOURCES_UNQLITE})

ADD_EXECUTABLE(Example_cpp ${CMAKE_CURRENT_LIST_DIR}/example/unqlite_cpp.cpp ${HEADERS_UNQLITE_CPP})
TARGET_LINK_LIBRARIES(Example_cpp PRIVATE ${UNQLITE_SHARED_LIB})